FROM tmacregistry-tmacomms.azurecr.io/tmacomms/basejdk8:latest
LABEL Name=fuse-nifi Version=1.4.0
MAINTAINER Andrei <andrei@tmacomms.com>
ENV        BANNER_TEXT="" \
           S2S_PORT=""
ARG UID=1000
ARG GID=1000
ARG NIFI_VERSION=1.4.0
ARG MIRROR=https://archive.apache.org/dist

ENV NIFI_BASE_DIR /opt/nifi 
ENV NIFI_HOME=$NIFI_BASE_DIR/nifi-$NIFI_VERSION \
    NIFI_BINARY_URL=/nifi/$NIFI_VERSION/nifi-$NIFI_VERSION-bin.tar.gz

# Setup NiFi user
RUN groupadd -g $GID nifi || groupmod -n nifi `getent group $GID | cut -d: -f1` \
    && useradd --shell /bin/bash -u $UID -g $GID -m nifi \
    && mkdir -p $NIFI_HOME/conf/templates \
    && chown -R nifi:nifi $NIFI_BASE_DIR

USER nifi

# Download, validate, and expand Apache NiFi binary.
RUN curl -fSL $MIRROR/$NIFI_BINARY_URL -o $NIFI_BASE_DIR/nifi-$NIFI_VERSION-bin.tar.gz \
    && echo "$(curl https://archive.apache.org/dist/$NIFI_BINARY_URL.sha256) *$NIFI_BASE_DIR/nifi-$NIFI_VERSION-bin.tar.gz" | sha256sum -c - \
    && tar -xvzf $NIFI_BASE_DIR/nifi-$NIFI_VERSION-bin.tar.gz -C $NIFI_BASE_DIR \
    && rm $NIFI_BASE_DIR/nifi-$NIFI_VERSION-bin.tar.gz \
    && chown -R nifi:nifi $NIFI_HOME

    



#COPY       start_nifi.sh /${NIFI_HOME}/
#FROM xemuliam/nifi-base:1.4.0

# CrushFTP requires root
#  tmacregistry-tmacomms.azurecr.io/tmacomms/basejdk8
RUN echo 'Acquire::HTTP::Proxy "http://squid.tmacomms.com:3128";' >> /etc/apt/apt.conf.d/01proxy \
 && echo 'Acquire::HTTPS::Proxy "";' >> /etc/apt/apt.conf.d/01proxy
USER root
RUN apt-get update && apt-get upgrade -y


# Get CrushFTP 7
RUN mkdir /downloads /nifi
WORKDIR /downloads

RUN wget http://apache.mirror.digitalpacific.com.au/nifi/1.4.0/nifi-1.4.0-bin.tar.gz && wget http://apache.mirror.digitalpacific.com.au/nifi/1.4.0/nifi-toolkit-1.4.0-bin.tar.gz && tar -xzvf nifi-1.4.0-bin.tar.gz -C /nifi --strip-components=1 && rm -rf /downloads/*


ARG NIFI_HOME
ENV NIFI_HOME=/nifi
RUN mkdir /tmac /tmac/templates /tmac/archive /tmac/flow
VOLUME     /tmac/templates /tmac/archive /tmac/flow

#backup config
RUN mv /nifi/conf/nifi.properties /nifi/conf/nifi.origprops
RUN mv /nifi/conf/bootstrap.conf /nifi/conf/bootstrap.origconf
RUN mv /nifi/conf/logback.xml /nifi/conf/logback.origxml



# add sample templates
ADD templates/ /tmac/templates/ 
WORKDIR  /nifi

# Clean up APT when done.
RUN apt-get clean && rm -rf /downloads/*

RUN mkdir /etc/service/nifi
RUN mkdir /ssl
ADD conf/nifiserver.sh /etc/service/nifi/run
RUN  chmod +x /etc/service/nifi/run

RUN  chmod +x /nifi/bin/nifi.sh 
EXPOSE 8080 8443
# backup config
RUN mkdir -p  /download/baseconfig/ && cp  /nifi/conf/* /download/baseconfig/
# update config
ADD conf/bootstrap.conf /nifi/conf/bootstrap.conf
ADD conf/logback.xml /nifi/conf/logback.xml
ADD conf/ssl/* /ssl/
ADD conf/nifi.properties /nifi/conf/nifi.properties
#ADD conf/nifi.properties /tmac/nifi.base

RUN apt-get update && \
    apt-get install -y software-properties-common unzip tar zip sudo wget curl && apt-get update && \
    apt-get install -y git mercurial apt-transport-https ca-certificates git

# Use baseimage-docker's init system.
CMD ["/sbin/my_init"]

# Run Teiid server and bind to all interface
#CMD ["/bin/sh", "-c", "/nifi/bin/nifi.sh run"]


#ENTRYPOINT ["/nifi/bin/nifi.sh run"]
##CMD [" run"]
#entrypoint: "./nifi/bin/nifi.sh run"


